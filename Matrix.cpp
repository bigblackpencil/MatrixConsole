#include "Matrix.h"
#include "iostream"

MatrixException::MatrixException(int i)
{
	numError = i;
}

const char* MatrixException::Error() const
{
	static const char*
		arrayErrors[] =
	{
		/*  0  */	"Неизвестная ошибка.",
		/*  1  */	"Переполнение. Попытка доступа к несуществующему элементу.",
		/*  2  */	"Обратная матрица не рассчитана: определитель равен 0.",
		/*  3  */	"Невозможно рассчитать минор для матрицы данного размера.",
		/*  4  */	"Неверный адрес переменной.",
		/*  5  */	"Ошибка ввода размера матрицы.",
		/*  6  */	"Невозможно выделить память.",
		/*  7  */	"Пункта меню с таким номером нет.",
		/*  8  */	"Размер матрицы должен задаваться целым числом и быть больше нуля.",
		/*  9  */	"Невозможно присвоить значение элементу. Проверьте вводимое значение.",
		/*  10 */	"Невозможно открыть файл для записи.",
		/*  11 */	"Невозможно открыть файл для чтения.",
		/*  12 */	"Количество чисел в файле меньше необходимого.",
		/*  13 */	"Нет строки с таким номером.",
		/*  14 */	"Нет столбца с таким номером."
		/*  15 */	"Для умножения матриц кол-во столбцов первой матрицы должно совпадать с кол-вом строк второй матрицы."
	};

	if (numError >= 0 && numError <= 16) {
		return arrayErrors[numError];
	}
	else {
		return 0;
	}
}
